/* DO NOT EDIT */
/* This file was generated by Stone */

package com.dropbox.core.v2.paper;

import com.dropbox.core.DbxException;

/**
 * The request builder returned by {@link
 * DbxUserPaperRequests#foldersCreateBuilder}.
 *
 * <p> Use this class to set optional request parameters and complete the
 * request. </p>
 */
public class FoldersCreateBuilder {
    private final DbxUserPaperRequests _client;
    private final PaperFolderCreateArg.Builder _builder;

    /**
     * Creates a new instance of this builder.
     *
     * @param _client  Dropbox namespace-specific client used to issue paper
     *     requests.
     * @param _builder  Request argument builder.
     *
     * @return instsance of this builder
     */
    FoldersCreateBuilder(DbxUserPaperRequests _client, PaperFolderCreateArg.Builder _builder) {
        if (_client == null) {
            throw new NullPointerException("_client");
        }
        this._client = _client;
        if (_builder == null) {
            throw new NullPointerException("_builder");
        }
        this._builder = _builder;
    }

    /**
     * Set value for optional field.
     *
     * @param parentFolderId  The encrypted Paper folder Id where the new Paper
     *     folder should be created. The API user has to have write access to
     *     this folder or error is thrown. If not supplied, the new folder will
     *     be created at top level.
     *
     * @return this builder
     */
    public FoldersCreateBuilder withParentFolderId(String parentFolderId) {
        this._builder.withParentFolderId(parentFolderId);
        return this;
    }

    /**
     * Set value for optional field.
     *
     * @param isTeamFolder  Whether the folder to be created should be a team
     *     folder. This value will be ignored if parent_folder_id is supplied,
     *     as the new folder will inherit the type (private or team folder) from
     *     its parent. We will by default create a top-level private folder if
     *     both parent_folder_id and is_team_folder are not supplied.
     *
     * @return this builder
     */
    public FoldersCreateBuilder withIsTeamFolder(Boolean isTeamFolder) {
        this._builder.withIsTeamFolder(isTeamFolder);
        return this;
    }

    /**
     * Issues the request.
     */
    @SuppressWarnings("deprecation")
    public PaperFolderCreateResult start() throws PaperFolderCreateErrorException, DbxException {
        PaperFolderCreateArg arg_ = this._builder.build();
        return _client.foldersCreate(arg_);
    }
}
