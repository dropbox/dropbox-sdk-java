/* DO NOT EDIT */
/* This file was generated by Stone */

package com.dropbox.core.v2.team;

import com.dropbox.core.DbxException;
import com.dropbox.core.util.LangUtil;

import java.util.Date;

/**
 * The request builder returned by {@link
 * DbxTeamTeamRequests#legalHoldsCreatePolicyBuilder}.
 *
 * <p> Use this class to set optional request parameters and complete the
 * request. </p>
 */
public class LegalHoldsCreatePolicyBuilder {
    private final DbxTeamTeamRequests _client;
    private final LegalHoldsPolicyCreateArg.Builder _builder;

    /**
     * Creates a new instance of this builder.
     *
     * @param _client  Dropbox namespace-specific client used to issue team
     *     requests.
     * @param _builder  Request argument builder.
     *
     * @return instsance of this builder
     */
    LegalHoldsCreatePolicyBuilder(DbxTeamTeamRequests _client, LegalHoldsPolicyCreateArg.Builder _builder) {
        if (_client == null) {
            throw new NullPointerException("_client");
        }
        this._client = _client;
        if (_builder == null) {
            throw new NullPointerException("_builder");
        }
        this._builder = _builder;
    }

    /**
     * Set value for optional field.
     *
     * @param description  A description of the legal hold policy. Must have
     *     length of at most 501.
     *
     * @return this builder
     *
     * @throws IllegalArgumentException  If any argument does not meet its
     *     preconditions.
     */
    public LegalHoldsCreatePolicyBuilder withDescription(String description) {
        this._builder.withDescription(description);
        return this;
    }

    /**
     * Set value for optional field.
     *
     * @param startDate  start date of the legal hold policy.
     *
     * @return this builder
     */
    public LegalHoldsCreatePolicyBuilder withStartDate(Date startDate) {
        this._builder.withStartDate(startDate);
        return this;
    }

    /**
     * Set value for optional field.
     *
     * @param endDate  end date of the legal hold policy.
     *
     * @return this builder
     */
    public LegalHoldsCreatePolicyBuilder withEndDate(Date endDate) {
        this._builder.withEndDate(endDate);
        return this;
    }

    /**
     * Issues the request.
     */
    public LegalHoldPolicy start() throws LegalHoldsPolicyCreateErrorException, DbxException {
        LegalHoldsPolicyCreateArg arg_ = this._builder.build();
        return _client.legalHoldsCreatePolicy(arg_);
    }
}
