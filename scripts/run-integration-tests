#!/usr/bin/env bash

die() {
    echo >&2 "error: release checks failed"
    exit 1
}

# Exit immediately on any error.
set -euf
trap die SIGTERM

DIR=`dirname $(dirname "${BASH_SOURCE[0]}")`

run() {
    echo "================================================================================"
    echo "    CMD: $@"
    echo " OUTPUT:"
    $@ || die
    echo "================================================================================"
}

gradle() {
    (cd "${DIR}" && run ./gradlew -c standalone-settings.gradle "$@")
}

android_gradle() {
    (cd "${DIR}/examples/android" && run ./gradlew "$@")
}

if [ $# -ne 1 ] ; then
    script=`basename "${0}"`
    echo >&2 "usage: $script production-user-auth.json"
    exit 1
fi

AUTH_FILE="${1}"

if [ ! -f "${AUTH_FILE}" ] ; then
    echo >&2 "error: no such file: ${AUTH_FILE}"
    exit 1
fi

tempfile=$(mktemp -t `basename "${BASH_SOURCE[0]}"`.XXXXXXXXXX)
function cleanup() {
    [ ! -e "${tempfile}" ] || rm -f "${tempfile}"
}
trap cleanup EXIT

echo "Running integration tests..."

gradle check

# Run integration tests against major HTTP requestor implementations
for requestor in "OkHttpRequestor" "OkHttp3Requestor" "StandardHttpRequestor" ; do
    gradle -Pcom.dropbox.test.httpRequestor="${requestor}" -Pcom.dropbox.test.authInfoFile="${AUTH_FILE}" integrationTest
    gradle -Pcom.dropbox.test.httpRequestor="${requestor}" -Pcom.dropbox.test.authInfoFile="${AUTH_FILE}" proguardTest
done

# prepare examples to be run
android_gradle assemble
