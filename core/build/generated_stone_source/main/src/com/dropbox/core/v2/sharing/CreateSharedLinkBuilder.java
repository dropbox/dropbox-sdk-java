/* DO NOT EDIT */
/* This file was generated by Stone */

package com.dropbox.core.v2.sharing;

import com.dropbox.core.DbxException;

/**
 * The request builder returned by {@link
 * DbxUserSharingRequests#createSharedLinkBuilder}.
 *
 * <p> Use this class to set optional request parameters and complete the
 * request. </p>
 */
public class CreateSharedLinkBuilder {
    private final DbxUserSharingRequests _client;
    private final CreateSharedLinkArg.Builder _builder;

    /**
     * Creates a new instance of this builder.
     *
     * @param _client  Dropbox namespace-specific client used to issue sharing
     *     requests.
     * @param _builder  Request argument builder.
     *
     * @return instsance of this builder
     */
    CreateSharedLinkBuilder(DbxUserSharingRequests _client, CreateSharedLinkArg.Builder _builder) {
        if (_client == null) {
            throw new NullPointerException("_client");
        }
        this._client = _client;
        if (_builder == null) {
            throw new NullPointerException("_builder");
        }
        this._builder = _builder;
    }

    /**
     * Set value for optional field.
     *
     * <p> If left unset or set to {@code null}, defaults to {@code false}. </p>
     *
     * @param shortUrl  Defaults to {@code false} when set to {@code null}.
     *
     * @return this builder
     */
    public CreateSharedLinkBuilder withShortUrl(Boolean shortUrl) {
        this._builder.withShortUrl(shortUrl);
        return this;
    }

    /**
     * Set value for optional field.
     *
     * @param pendingUpload  If it's okay to share a path that does not yet
     *     exist, set this to either {@link PendingUploadMode#FILE} or {@link
     *     PendingUploadMode#FOLDER} to indicate whether to assume it's a file
     *     or folder.
     *
     * @return this builder
     */
    public CreateSharedLinkBuilder withPendingUpload(PendingUploadMode pendingUpload) {
        this._builder.withPendingUpload(pendingUpload);
        return this;
    }

    /**
     * Issues the request.
     */
    @SuppressWarnings("deprecation")
    public PathLinkMetadata start() throws CreateSharedLinkErrorException, DbxException {
        CreateSharedLinkArg arg_ = this._builder.build();
        return _client.createSharedLink(arg_);
    }
}
